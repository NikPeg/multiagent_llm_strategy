import asyncio
from config import ADMIN_CHAT_ID, GAME_PROMPT, RPG_PROMPT, HISTORY_LIMIT
from database import (
    set_user_country, set_user_country_desc, set_user_aspect
)
from aiogram import Router, types
from utils import answer_html, send_html, keep_typing, stars_to_bold
from game import ASPECTS
from model_handler import model_handler, executor
# –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã/–æ–ø–∏—Å–∞–Ω–∏—è –ø–æ user_id, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
from database import *
from keyboard import ASPECTS_KEYBOARD
from rag_retriever import get_rag_context
from style_checker import contains_modern_words
from .fsm import *

router = Router()

@router.message(RegisterCountry.waiting_for_name)
async def handle_country_name(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    user_text = message.text.strip()
    await set_user_country(user_id, user_text)
    await answer_html(
        message,
        f"üè∫ –¢—ã –¥–∞—Ä–æ–≤–∞–ª —Å–≤–æ–µ–π –¥–µ—Ä–∂–∞–≤–µ –∏–º—è: <b>{user_text}</b>.\n\n"
        f"–û–ø–∏—à–∏ –∑–µ–º–ª—é –∏ –Ω–∞—Ä–æ–¥ —Å–≤–æ–µ–≥–æ —Ü–∞—Ä—Å—Ç–≤–∞: –µ–≥–æ –≥–µ–æ–≥—Ä–∞—Ñ–∏—é, –¥—Ä–µ–≤–Ω–∏–µ –æ–±—ã—á–∞–∏, —Ç–∞–ª–∞–Ω—Ç—ã –∏ —Ç—Ä–∞–¥–∏—Ü–∏–∏. "
        f"–ü–æ–≤–µ–¥–∞–π –æ –Ω–∞—á–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —á–µ—Ä—Ç–∞—Ö —Å–≤–æ–µ–≥–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞.\n\n"
        f"‚úã –ï—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å –∏–º—è, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ <b>/cancel</b>.",
    )
    await state.set_state(RegisterCountry.waiting_for_desc)

@router.message(RegisterCountry.waiting_for_desc)
async def handle_country_desc(message, user_id: int, user_text: str):
    if user_text.strip().lower() == "/cancel":
        await answer_html(
            message,
            "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–π —Å—Ç—Ä–∞–Ω—ã:",
        )
        await handle_country_name(message, user_id, "")
        return
    country = await get_user_country(user_id)
    chat_id = message.chat.id

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
    bad_word = contains_modern_words(user_text)
    if bad_word:
        await answer_html(
            message,
            f"‚ùóÔ∏è–û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ª–æ–≤–∞, –Ω–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–ª—è —ç–ø–æ—Ö–∏ –¥—Ä–µ–≤–Ω–µ–≥–æ –º–∏—Ä–∞ ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä, <b>{bad_word}</b>. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–ø–∏—à–∏ –æ–ø–∏—Å–∞–Ω–∏–µ, –∏–∑–±–µ–≥–∞—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ–Ω—è—Ç–∏–π (–∞–≤—Ç–æ–º–æ–±–∏–ª–∏, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, –¥–æ–ª–ª–∞—Ä—ã –∏ —Ç.–ø.)"
        )
        return

    await answer_html(
        message,
        "–°–æ–∑–¥–∞—é –ø–æ–¥—Ä–æ–±–Ω–æ–µ –Ω–∞—á–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤—Å–µ—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ –≤–∞—à–µ–π —Å—Ç—Ä–∞–Ω—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...",
    )
    typing_task = asyncio.create_task(keep_typing(message.bot, chat_id))

    loop = asyncio.get_event_loop()
    user_name = message.from_user.username
    await send_html(
        message.bot,
        ADMIN_CHAT_ID,
        f"üì® –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} {user_name}:\n\n"
        f"<b>–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã:</b> {country}\n"
        f"<b>–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã:</b>\n{user_text.strip()}\n\n",
    )
    all_aspects = []

    for code, label, prompt in ASPECTS:
        aspect_prompt = (
            f"{GAME_PROMPT}"
            f"–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã: {country}\n"
            f"–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã: {user_text.strip()}\n"
        )

        # --- –û—Å–æ–±—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –í–ù–ï–®–ù–ï–ô –ü–û–õ–ò–¢–ò–ö–ò ---
        if code == "–≤–Ω–µ—à_–ø–æ–ª–∏—Ç–∏–∫–∞":
            # –ü–æ–ª—É—á–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å—Ç—Ä–∞–Ω
            other_descs = await get_other_countries_descs(country)
            if other_descs:
                aspect_prompt += (
                        "–ö—Ä–∞—Ç–∫–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω –≤ –º–∏—Ä–µ:\n" +
                        "".join([f"- {c_name}: {desc.strip() if desc else '(–Ω–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è)'}\n" for c_name, desc in other_descs])
                )
        # --- –û—Å–æ–±—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –¢–ï–†–†–ò–¢–û–†–ò–ò ---
        if code == "—Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è":
            # –ü–æ–ª—É—á–∞–µ–º –∞—Å–ø–µ–∫—Ç —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å—Ç—Ä–∞–Ω
            other_territories = await get_other_countries_aspect(country, "—Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è")
            if other_territories:
                aspect_prompt += (
                        "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≥—Ä–∞–Ω–∏—Ü –∏ –∑–µ–º–µ–ª—å –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω:\n" +
                        "".join([f"- {c_name}: {territory.strip() if territory else '(–Ω–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è)'}\n" for c_name, territory in other_territories])
                )

        # –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–º–ø—Ç –∞—Å–ø–µ–∫—Ç–∞
        aspect_prompt += prompt

        # --- –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–º–ø—Ç –≤ —á–∞—Ç –∞–¥–º–∏–Ω–æ–≤ (–¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è) ---
        await send_html(
            message.bot,
            ADMIN_CHAT_ID,
            f"<b>–ü—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—Å–ø–µ–∫—Ç–∞ <u>{label}</u> —Å—Ç—Ä–∞–Ω—ã {country}:</b>\n"
            f"<pre>{aspect_prompt}</pre>"
        )

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞—Å–ø–µ–∫—Ç–∞
        aspect_value = await loop.run_in_executor(
            executor,
            model_handler.generate_short_responce,
            aspect_prompt,
        )
        await answer_html(
            message,
            f"<b>{label}</b> —Å—Ç—Ä–∞–Ω—ã {country}: {aspect_value.strip()}{'' if aspect_value.strip().endswith('.') else '.'}",
        )
        await send_html(
            message.bot,
            ADMIN_CHAT_ID,
            f"<b>{label}</b> —Å—Ç—Ä–∞–Ω—ã {country}: {aspect_value.strip()}{'' if aspect_value.strip().endswith('.') else '.'}",
        )
        await set_user_aspect(user_id, code, aspect_value.strip())
        all_aspects.append(aspect_value.strip())

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã
    desc_prompt = (
        f"{GAME_PROMPT}"
        f"–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã: {country}\n"
        f"–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã: {user_text.strip()}\n"
        f"{chr(10).join(all_aspects)}"
        "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã: "
    )

    # –¢–∞–∫ –∂–µ –ª–æ–≥–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è!
    await send_html(
        message.bot,
        ADMIN_CHAT_ID,
        f"<b>–ü—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±—â–µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã {country}:</b>\n"
        f"<pre>{desc_prompt}</pre>"
    )

    description = await loop.run_in_executor(
        executor,
        model_handler.generate_short_responce,
        desc_prompt,
    )
    await send_html(
        message.bot,
        ADMIN_CHAT_ID,
        f"<b>–û–ø–∏—Å–∞–Ω–∏–µ</b> —Å—Ç—Ä–∞–Ω—ã {country}: {description.strip()}{'' if description.strip().endswith('.') else '.'}",
    )
    await set_user_country_desc(user_id, description.strip())

    typing_task.cancel()

    await answer_html(
        message,
        f"‚öñÔ∏è –î–∞ –±—É–¥–µ—Ç –≤–æ–ª—è –±–æ–≥–æ–≤ –±–ª–∞–≥–æ—Å–∫–ª–æ–Ω–Ω–∞ –∫ —Ç–µ–±–µ, –ø—Ä–∞–≤–∏—Ç–µ–ª—å —Å—Ç—Ä–∞–Ω—ã <b>{country}</b>!\n\n"
        f"–û—Ç–Ω—ã–Ω–µ —Ç–≤–æ–µ —Å–ª–æ–≤–æ ‚Äî –∑–∞–∫–æ–Ω –¥–ª—è –Ω–∞—Ä–æ–¥–∞ –∏ –≤–æ–∏–Ω–æ–≤ –¥—Ä–µ–≤–Ω–µ–≥–æ –º–∏—Ä–∞. –¢—ã –º–æ–∂–µ—à—å –æ–±—ä—è–≤–∏—Ç—å —Å–µ–±—è –∏–º–ø–µ—Ä–∞—Ç–æ—Ä–æ–º –∏ —É—Å—Ç—Ä–µ–º–∏—Ç—å—Å—è –∫ –∑–∞–≤–æ–µ–≤–∞–Ω–∏—é –≤—Å–µ—Ö –∑–µ–º–µ–ª—å, "
        f"—Ä–∞–∑–≤–∏–≤–∞—Ç—å —Ç–∞–π–Ω—ã –Ω–∞—É–∫–∏ –∏ –∏—Å–∫—É—Å—Å—Ç–≤–æ –º–∞–≥–∏–∏, —á—Ç–æ–±—ã –ø—Ä–µ–≤–∑–æ–π—Ç–∏ –¥—Ä—É–≥–∏—Ö –≤ –º–æ–≥—É—â–µ—Å—Ç–≤–µ, –ª–∏–±–æ –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å—á–∞—Å—Ç—å–µ –∏ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏–∏ —Å–≤–æ–∏—Ö –ø–æ–¥–¥–∞–Ω–Ω—ã—Ö. "
        f"–ö–∞–∫—É—é —Å—É–¥—å–±—É –∏–∑–±–µ—Ä–µ—à—å –¥–ª—è —Å–≤–æ–µ–π –¥–µ—Ä–∂–∞–≤—ã ‚Äî —Ä–µ—à–∞—Ç—å –ª–∏—à—å —Ç–µ–±–µ!\n\n"
        f"<b>–¢–≤–æ—ë –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ —Å–µ–π—á–∞—Å:</b>\n{description or '(–µ—â—ë –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ)'}\n\n"
        "üìú <b>–ü–æ–ª–µ–∑–Ω—ã–µ —Å–≤–∏—Ç–∫–∏:</b>\n"
        "/new ‚Äî –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –≥–ª–∞–≤—É —Å–≤–æ–µ–π –∏—Å—Ç–æ—Ä–∏–∏\n"
        "/send ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å–ª–∞–Ω–∏–µ –∏–Ω–æ–º—É –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤—É\n"
        "/reset_country ‚Äî –∑–∞–±—ã—Ç—å –ø—Ä–µ–∂–Ω–µ–µ –∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ —Ü–∞—Ä—Å—Ç–≤–æ\n",
        reply_markup=ASPECTS_KEYBOARD,
    )

@router.message(F.text & ~F.text.startswith('/'))
async def handle_game_dialog(message, user_id: int, user_text: str):
    chat_id = message.chat.id
    user_name = message.from_user.username

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
    bad_word = contains_modern_words(user_text)
    if bad_word:
        await answer_html(
            message,
            f"‚ùóÔ∏è–û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ª–æ–≤–∞, –Ω–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–ª—è —ç–ø–æ—Ö–∏ –¥—Ä–µ–≤–Ω–µ–≥–æ –º–∏—Ä–∞ ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä, <b>{bad_word}</b>. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–ø–∏—à–∏ –æ–ø–∏—Å–∞–Ω–∏–µ, –∏–∑–±–µ–≥–∞—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ–Ω—è—Ç–∏–π (–∞–≤—Ç–æ–º–æ–±–∏–ª–∏, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, –¥–æ–ª–ª–∞—Ä—ã –∏ —Ç.–ø.)",
            reply_markup=ASPECTS_KEYBOARD,
        )
        return

    try:
        await message.bot.send_chat_action(chat_id=chat_id, action="typing")
        typing_task = asyncio.create_task(keep_typing(message.bot, chat_id))

        await send_html(
            message.bot,
            ADMIN_CHAT_ID,
            f"üì® –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} {user_name}:\n\n"
            f"<code>{user_text}</code>"
        )

        country_name = await get_user_country(user_id)
        country_desc = await get_user_country_desc(user_id)

        # –ü–æ–ª—É—á–∏—Ç—å RAG-–∫–æ–Ω—Ç–µ–∫—Å—Ç (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é —Å–ø—Ä–∞–≤–∫—É) –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤ –ø—Ä–æ–º–ø—Ç –∫ –º–æ–¥–µ–ª–∏
        rag_context = await get_rag_context(user_id, user_text)

        # RPG_PROMPT + rag_context + –∏—Å—Ç–æ—Ä–∏—è + –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∑–∞–ø—Ä–æ—Å
        # –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º RPG_PROMPT –µ—Å–ª–∏ rag_context –µ—Å—Ç—å
        if rag_context:
            prompt_with_rag = f"{RPG_PROMPT}\n\n{rag_context}\n"
        else:
            prompt_with_rag = RPG_PROMPT + "\n\n"

        await send_html(
            message.bot,
            ADMIN_CHAT_ID,
            f"<b>–ü—Ä–æ–º–ø—Ç:</b>\n"
            f"{prompt_with_rag}"
        )

        # –ü–µ—Ä–µ–¥–∞–¥–∏–º rag-—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π prompt –≤ LLM
        assistant_reply, context = await asyncio.get_event_loop().run_in_executor(
            executor,
            model_handler.sync_generate_response,
            user_id, user_text, prompt_with_rag, country_name, country_desc, HISTORY_LIMIT
        )
        typing_task.cancel()
        html_reply = stars_to_bold(assistant_reply)
        await answer_html(message, html_reply, reply_markup=ASPECTS_KEYBOARD)

        await send_html(
            message.bot,
            ADMIN_CHAT_ID,
            f"<b>–ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏:</b>\n"
            f"{context[len(prompt_with_rag):]}"
        )
        await send_html(
            message.bot,
            ADMIN_CHAT_ID,
            f"<b>–û—Ç–≤–µ—Ç –∏–≥—Ä–æ–∫—É:</b>\n"
            f"<code>{assistant_reply}</code>",
        )
    except Exception as e:
        await send_html(
            message.bot,
            ADMIN_CHAT_ID,
            f"–û—à–∏–±–∫–∞: {str(e)}"
        )

def register(dp):
    dp.include_router(router)