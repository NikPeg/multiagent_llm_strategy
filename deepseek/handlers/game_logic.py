import asyncio
from config import ADMIN_CHAT_ID, GAME_PROMPT, RPG_PROMPT, HISTORY_LIMIT
from database import (
    set_user_country, set_user_country_desc, set_user_aspect
)
from utils import answer_html, send_html, keep_typing, stars_to_bold
from game import ASPECTS
from model_handler import model_handler, executor
# –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã/–æ–ø–∏—Å–∞–Ω–∏—è –ø–æ user_id, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
from database import get_user_country, get_user_country_desc
from keyboard import ASPECTS_KEYBOARD
from rag_retriever import get_rag_context
from style_checker import contains_modern_words

async def handle_country_name(message, user_id: int, user_text: str):
    await set_user_country(user_id, user_text)
    await answer_html(
        message,
        f"–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã: <b>{user_text}</b>\n\n"
        f"–¢–µ–ø–µ—Ä—å –æ–ø–∏—à–∏ –∫—Ä–∞—Ç–∫–æ —Å–≤–æ—é —Å—Ç—Ä–∞–Ω—É (–≥–µ–æ–≥—Ä–∞—Ñ–∏—è, –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏, –Ω–∞—Ä–æ–¥, –∫—É–ª—å—Ç—É—Ä–∞, —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è):",
    )

async def handle_country_desc(message, user_id: int, user_text: str):
    country = await get_user_country(user_id)
    chat_id = message.chat.id

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
    bad_word = contains_modern_words(user_text)
    if bad_word:
        await answer_html(
            message,
            f"‚ùóÔ∏è–û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ª–æ–≤–∞, –Ω–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–ª—è —ç–ø–æ—Ö–∏ –¥—Ä–µ–≤–Ω–µ–≥–æ –º–∏—Ä–∞ ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä, <b>{bad_word}</b>. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–ø–∏—à–∏ –æ–ø–∏—Å–∞–Ω–∏–µ, –∏–∑–±–µ–≥–∞—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ–Ω—è—Ç–∏–π (–∞–≤—Ç–æ–º–æ–±–∏–ª–∏, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, –¥–æ–ª–ª–∞—Ä—ã –∏ —Ç.–ø.)"
        )
        return

    await answer_html(
        message,
        "–°–æ–∑–¥–∞—é –ø–æ–¥—Ä–æ–±–Ω–æ–µ –Ω–∞—á–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤—Å–µ—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ –≤–∞—à–µ–π —Å—Ç—Ä–∞–Ω—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...",
    )
    typing_task = asyncio.create_task(keep_typing(message.bot, chat_id))

    loop = asyncio.get_event_loop()
    user_name = message.from_user.username
    await send_html(
        message.bot,
        ADMIN_CHAT_ID,
        f"üì® –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} {user_name}:\n\n"
        f"<b>–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã:</b> {country}\n"
        f"<b>–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã:</b>\n{user_text.strip()}\n\n",
    )
    all_aspects = []

    for code, label, prompt in ASPECTS:
        aspect_prompt = (
            f"{GAME_PROMPT}"
            f"–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã: {country}\n"
            f"–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã: {user_text.strip()}\n"
            f"{prompt}"
        )
        aspect_value = await loop.run_in_executor(
            executor,
            model_handler.generate_short_responce,
            aspect_prompt,
        )
        await answer_html(
            message,
            f"<b>{label}</b> —Å—Ç—Ä–∞–Ω—ã {country}: {aspect_value}{'' if aspect_value.endswith('.') else '.'}",
        )
        await send_html(
            message.bot,
            ADMIN_CHAT_ID,
            f"<b>{label}</b> —Å—Ç—Ä–∞–Ω—ã {country}: {aspect_value}{'' if aspect_value.endswith('.') else '.'}",
        )
        await set_user_aspect(user_id, code, aspect_value)
        all_aspects.append(aspect_value)

    desc_prompt = (
        f"{GAME_PROMPT}"
        f"–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã: {country}\n"
        f"–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã: {user_text.strip()}\n"
        f"{chr(10).join(all_aspects)}"
        "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã: "
    )
    description = await loop.run_in_executor(
        executor,
        model_handler.generate_short_responce,
        desc_prompt,
    )
    await send_html(
        message.bot,
        ADMIN_CHAT_ID,
        f"<b>–û–ø–∏—Å–∞–Ω–∏–µ</b> —Å—Ç—Ä–∞–Ω—ã {country}: {description}{'' if description.endswith('.') else '.'}",
    )
    await set_user_country_desc(user_id, description)

    typing_task.cancel()

    await answer_html(
        message,
        f"‚öñÔ∏è –î–∞ –±—É–¥–µ—Ç –≤–æ–ª—è –±–æ–≥–æ–≤ –±–ª–∞–≥–æ—Å–∫–ª–æ–Ω–Ω–∞ –∫ —Ç–µ–±–µ, –ø—Ä–∞–≤–∏—Ç–µ–ª—å —Å—Ç—Ä–∞–Ω—ã <b>{country}</b>!\n"
        f"–¢—ã —Å—Ç–æ–∏—à—å —É –∏—Å—Ç–æ–∫–æ–≤ –≤–µ–ª–∏–∫–æ–≥–æ –Ω–∞—Ä–æ–¥–∞. –í–æ –≤–ª–∞—Å—Ç–∏ —Ç–≤–æ–µ–π ‚Äî –≤–æ–∑–≤–æ–¥–∏—Ç—å –≥–æ—Ä–æ–¥–∞, —Å—Ç—Ä–æ–∏—Ç—å —Ö—Ä–∞–º—ã, –≤–µ—Å—Ç–∏ –≤–æ–π–Ω—ã –∏ –∑–∞–∫–ª—é—á–∞—Ç—å —Å–æ—é–∑—ã —Å –∏–Ω—ã–º–∏ –¥–µ—Ä–∂–∞–≤–∞–º–∏.\n"
        f"–ö–∞–∂–¥–æ–µ –ø—Ä–∏–∫–∞–∑–∞–Ω–∏–µ —Ç–≤–æ–µ –±—É–¥–µ—Ç —ç—Ö–æ–º –≥—Ä–µ–º–µ—Ç—å –ø–æ –∑–µ–º–ª—è–º —Ç–≤–æ–µ–≥–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞.\n"
        f"–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π —É–∫–∞–∑ –∏–ª–∏ –ø–æ–∂–µ–ª–∞–π —Å–æ–≤–µ—Ç —Å—Ç–∞—Ä–µ–π—à–∏–Ω.\n"
        "\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –ª–µ—Ç–æ–ø–∏—Å–∏ –∏—Å–ø–æ–ª—å–∑—É–π /new.",
        reply_markup=ASPECTS_KEYBOARD,
    )

async def handle_game_dialog(message, user_id: int, user_text: str):
    chat_id = message.chat.id
    user_name = message.from_user.username

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
    bad_word = contains_modern_words(user_text)
    if bad_word:
        await answer_html(
            message,
            f"‚ùóÔ∏è–û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ª–æ–≤–∞, –Ω–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–ª—è —ç–ø–æ—Ö–∏ –¥—Ä–µ–≤–Ω–µ–≥–æ –º–∏—Ä–∞ ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä, <b>{bad_word}</b>. "
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–ø–∏—à–∏ –æ–ø–∏—Å–∞–Ω–∏–µ, –∏–∑–±–µ–≥–∞—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ–Ω—è—Ç–∏–π (–∞–≤—Ç–æ–º–æ–±–∏–ª–∏, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç, –¥–æ–ª–ª–∞—Ä—ã –∏ —Ç.–ø.)",
            reply_markup=ASPECTS_KEYBOARD,
        )
        return

    try:
        await message.bot.send_chat_action(chat_id=chat_id, action="typing")
        typing_task = asyncio.create_task(keep_typing(message.bot, chat_id))

        await send_html(
            message.bot,
            ADMIN_CHAT_ID,
            f"üì® –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} {user_name}:\n\n"
            f"<code>{user_text}</code>"
        )

        country_name = await get_user_country(user_id)
        country_desc = await get_user_country_desc(user_id)

        # –ü–æ–ª—É—á–∏—Ç—å RAG-–∫–æ–Ω—Ç–µ–∫—Å—Ç (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é —Å–ø—Ä–∞–≤–∫—É) –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –≤ –ø—Ä–æ–º–ø—Ç –∫ –º–æ–¥–µ–ª–∏
        rag_context = await get_rag_context(user_id, user_text)

        # RPG_PROMPT + rag_context + –∏—Å—Ç–æ—Ä–∏—è + –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∑–∞–ø—Ä–æ—Å
        # –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º RPG_PROMPT –µ—Å–ª–∏ rag_context –µ—Å—Ç—å
        if rag_context:
            prompt_with_rag = f"{RPG_PROMPT}\n\n{rag_context}\n"
        else:
            prompt_with_rag = RPG_PROMPT + "\n\n"

        await send_html(
            message.bot,
            ADMIN_CHAT_ID,
            f"<b>–ü—Ä–æ–º–ø—Ç:</b>\n"
            f"{prompt_with_rag}"
        )

        # –ü–µ—Ä–µ–¥–∞–¥–∏–º rag-—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π prompt –≤ LLM
        assistant_reply, context = await asyncio.get_event_loop().run_in_executor(
            executor,
            model_handler.sync_generate_response,
            user_id, user_text, prompt_with_rag, country_name, country_desc, HISTORY_LIMIT
        )
        typing_task.cancel()
        html_reply = stars_to_bold(assistant_reply)
        await answer_html(message, html_reply, reply_markup=ASPECTS_KEYBOARD)

        await send_html(
            message.bot,
            ADMIN_CHAT_ID,
            f"<b>–ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏:</b>\n"
            f"{context[len(prompt_with_rag):]}"
        )
        await send_html(
            message.bot,
            ADMIN_CHAT_ID,
            f"<b>–û—Ç–≤–µ—Ç –∏–≥—Ä–æ–∫—É:</b>\n"
            f"<code>{assistant_reply}</code>",
        )
    except Exception as e:
        await send_html(
            message.bot,
            ADMIN_CHAT_ID,
            f"–û—à–∏–±–∫–∞: {str(e)}"
        )
