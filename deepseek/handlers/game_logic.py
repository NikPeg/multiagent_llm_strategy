import asyncio
from config import ADMIN_CHAT_ID, GAME_PROMPT, RPG_PROMPT, HISTORY_LIMIT
from database import (
    set_user_country, set_user_country_desc, set_user_aspect
)
from utils import answer_html, send_html, keep_typing, stars_to_bold
from game import ASPECTS
from model_handler import model_handler, executor
# –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã/–æ–ø–∏—Å–∞–Ω–∏—è –ø–æ user_id, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è
from database import get_user_country, get_user_country_desc

async def handle_country_name(message, user_id: int, user_text: str):
    await set_user_country(user_id, user_text)
    await answer_html(
        message,
        f"–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã: <b>{user_text}</b>\n\n"
        f"–¢–µ–ø–µ—Ä—å –æ–ø–∏—à–∏ –∫—Ä–∞—Ç–∫–æ —Å–≤–æ—é —Å—Ç—Ä–∞–Ω—É (–≥–µ–æ–≥—Ä–∞—Ñ–∏—è, –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏, –Ω–∞—Ä–æ–¥, –∫—É–ª—å—Ç—É—Ä–∞, —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è):"
    )

async def handle_country_desc(message, user_id: int, user_text: str):
    country = await get_user_country(user_id)
    chat_id = message.chat.id

    await answer_html(message, "–°–æ–∑–¥–∞—é –ø–æ–¥—Ä–æ–±–Ω–æ–µ –Ω–∞—á–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤—Å–µ—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ –≤–∞—à–µ–π —Å—Ç—Ä–∞–Ω—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
    typing_task = asyncio.create_task(keep_typing(message.bot, chat_id))

    loop = asyncio.get_event_loop()
    user_name = message.from_user.username
    await send_html(
        message.bot,
        ADMIN_CHAT_ID,
        f"üì® –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} {user_name}:\n\n"
        f"<b>–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã:</b> {country}\n"
        f"<b>–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã:</b>\n{user_text.strip()}\n\n"
    )
    all_aspects = []

    for code, label, prompt in ASPECTS:
        aspect_prompt = (
            f"{GAME_PROMPT}"
            f"–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã: {country}\n"
            f"–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã: {user_text.strip()}\n"
            f"{prompt}"
        )
        aspect_value = await loop.run_in_executor(
            executor,
            model_handler.generate_short_responce,
            aspect_prompt,
        )
        await answer_html(
            message,
            f"<b>{label}</b> —Å—Ç—Ä–∞–Ω—ã {country}: {aspect_value}{'' if aspect_value.endswith('.') else '.'}"
        )
        await send_html(
            bot,
            ADMIN_CHAT_ID,
            f"<b>{label}</b> —Å—Ç—Ä–∞–Ω—ã {country}: {aspect_value}{'' if aspect_value.endswith('.') else '.'}"
        )
        await set_user_aspect(user_id, code, aspect_value)
        all_aspects.append(aspect_value)

    desc_prompt = (
        f"{GAME_PROMPT}"
        f"–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã: {country}\n"
        f"–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã: {user_text.strip()}\n"
        f"{chr(10).join(all_aspects)}"
        "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã: "
    )
    description = await loop.run_in_executor(
        executor,
        model_handler.generate_short_responce,
        desc_prompt,
    )
    await send_html(
        message.bot,
        ADMIN_CHAT_ID,
        f"<b>–û–ø–∏—Å–∞–Ω–∏–µ</b> —Å—Ç—Ä–∞–Ω—ã {country}: {description}{'' if description.endswith('.') else '.'}"
    )
    await set_user_country_desc(user_id, description)

    typing_task.cancel()

    await answer_html(
        message,
        f"–ò–≥—Ä–∞ –Ω–∞—á–∞—Ç–∞! –î–µ–π—Å—Ç–≤—É–π –∫–∞–∫ –ø—Ä–∞–≤–∏—Ç–µ–ª—å —Å—Ç—Ä–∞–Ω—ã <b>{country}</b>.\n"
        f"–¢—ã –º–æ–∂–µ—à—å –æ—Ç–¥–∞–≤–∞—Ç—å –ø—Ä–∏–∫–∞–∑—ã, –æ–±—ä—è–≤–ª—è—Ç—å –≤–æ–π–Ω—ã, —Å—Ç—Ä–æ–∏—Ç—å –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å –¥—Ä—É–≥–∏–º–∏ —Å—Ç—Ä–∞–Ω–∞–º–∏.\n"
        f"–í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑—É–π /new —á—Ç–æ–±—ã —Å–±—Ä–æ—Å–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç."
        "\n\n–ß—Ç–æ –±—É–¥–µ—à—å –¥–µ–ª–∞—Ç—å –ø–µ—Ä–≤—ã–º –¥–µ–ª–æ–º?"
    )

async def handle_game_dialog(message, user_id: int, user_text: str):
    chat_id = message.chat.id
    user_name = message.from_user.username

    try:
        await message.bot.send_chat_action(chat_id=chat_id, action="typing")
        typing_task = asyncio.create_task(keep_typing(message.bot, chat_id))

        country_name = await get_user_country(user_id)
        country_desc = await get_user_country_desc(user_id)

        assistant_reply, context = await asyncio.get_event_loop().run_in_executor(
            executor,
            model_handler.sync_generate_response,
            user_id, user_text, RPG_PROMPT, country_name, country_desc, HISTORY_LIMIT
        )
        typing_task.cancel()
        html_reply = stars_to_bold(assistant_reply)
        await answer_html(message, html_reply)

        await send_html(
            message.bot,
            ADMIN_CHAT_ID,
            f"üì® –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} {user_name}:\n\n"
            f"<b>–ü—Ä–æ–º–ø—Ç, –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –≤ –º–æ–¥–µ–ª—å:</b>\n"
            f"<code>{context}</code>\n\n"
            f"<b>–û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏:</b>\n"
            f"<code>{assistant_reply}</code>"
        )
    except Exception as e:
        await answer_html(message, f"–û—à–∏–±–∫–∞: {str(e)}")
