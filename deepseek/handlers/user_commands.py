from aiogram import types, Router
from aiogram.filters import Command

from utils import answer_html
from database import *
from aiogram.fsm.context import FSMContext

router = Router()

@router.message(Command("start"))
async def start(message: types.Message):
    user_id = message.from_user.id

    if await user_exists(user_id):
        country_desc = await get_user_country_desc(user_id)
        help_text = (
            "üëë <b>–°–Ω–æ–≤–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Ç–µ–±—è, –≤–ª–∞—Å—Ç–∏—Ç–µ–ª—å!</b>\n\n"
            "–¢—ã –ø—Ä–æ–¥–æ–ª–∂–∞–µ—à—å –ª–µ—Ç–æ–ø–∏—Å—å —Å–≤–æ–µ–π –¥–µ—Ä–∂–∞–≤—ã –≤ –º–∏—Ä–µ, –≥–¥–µ –ø–µ—Ä–µ–ø–ª–µ—Ç–∞—é—Ç—Å—è –≤–æ–π–Ω—ã, –Ω–∞—É–∫–∞, –º–∞–≥–∏—è –∏ —Å—É–¥—å–±—ã –Ω–∞—Ä–æ–¥–æ–≤.\n"
            "–í–ª–∞—Å—Ç—å —Ç–≤–æ—è ‚Äî –∑–∞–∫–æ–Ω –¥–ª—è —Å—Ç—Ä–∞–Ω—ã, –∞—Ä–º–∏–∏, —Ä–µ–º—ë—Å–µ–ª –∏ –¥—É—Ö–æ–≤–Ω—ã—Ö —Ç—Ä–∞–¥–∏—Ü–∏–π.\n"
            "–¢—ã –≤–æ–ª–µ–Ω –≤–æ–∑–≤—ã—Å–∏—Ç—å —Å–≤–æ–π –Ω–∞—Ä–æ–¥, –ø–æ–¥—á–∏–Ω–∏—Ç—å —Å–æ–ø–µ—Ä–Ω–∏–∫–æ–≤ –∏–ª–∏ –ø—Ä–∏–Ω–µ—Å—Ç–∏ —Å—á–∞—Å—Ç—å–µ —Å–≤–æ–∏–º –ø–æ–¥–¥–∞–Ω–Ω—ã–º.\n\n"
            f"<b>–¢–≤–æ—ë –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ —Å–µ–π—á–∞—Å:</b>\n{country_desc or '(–µ—â—ë –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ)'}\n\n"
            "üìú <b>–ü–æ–ª–µ–∑–Ω—ã–µ —Å–≤–∏—Ç–∫–∏:</b>\n"
            "/new ‚Äî –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –≥–ª–∞–≤—É —Å–≤–æ–µ–π –∏—Å—Ç–æ—Ä–∏–∏\n"
            "/reset_country ‚Äî –∑–∞–±—ã—Ç—å –ø—Ä–µ–∂–Ω–µ–µ –∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ —Ü–∞—Ä—Å—Ç–≤–æ\n"
            "\n–û–±—ä—è–≤–ª—è–π –ø—Ä–∏–∫–∞–∑—ã, –≤–æ–ø—Ä–æ—à–∞–π –æ —Å—É–¥—å–±–µ –∏–ª–∏ —Å–æ–≤–µ—Ä—à–∏ –¥–µ—è–Ω–∏–µ ‚Äî —Ç—ã —Å–∞–º —Ç–≤–æ—Ä–∏—à—å —Å–≤–æ—é –ª–µ–≥–µ–Ω–¥—É!"
        )
        await answer_html(message, help_text)
        return

    await clear_history(user_id)
    await clear_user_aspects(user_id)
    await set_user_country(user_id, None)
    await set_user_country_desc(user_id, None)
    await set_aspect_index(user_id, None)
    await answer_html(
        message,
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–æ–ª–µ–≤—É—é –≥–µ–æ–ø–æ–ª–∏—Ç–∏—á–µ—Å–∫—É—é –∏–≥—Ä—É —ç–ø–æ—Ö–∏ –¥—Ä–µ–≤–Ω–µ–≥–æ –º–∏—Ä–∞!\n\n"
        "–î–ª—è –Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏ <b>–Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–π —Å—Ç—Ä–∞–Ω—ã</b>:"
    )


@router.message(Command("new"))
async def new_chat(message: types.Message):
    user_id = message.from_user.id
    await clear_history(user_id)
    await answer_html(message, "–ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–∏–∞–ª–æ–≥–∞ —Å–±—Ä–æ—à–µ–Ω!‚öîÔ∏è")

@router.message(Command("send"))
async def player_send_message(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –∏–≥—Ä–æ–∫–∞-–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
    sender_country = await get_country_name_by_user_id(user_id)

    args = message.text.split(maxsplit=1)[1:]
    if not args or len(args[0].strip().split()) == 0:
        await message.reply("–§–æ—Ä–º–∞—Ç: /send <–Ω–∞–∑–≤–∞–Ω–∏–µ_—Å—Ç—Ä–∞–Ω—ã> <—Ç–µ–∫—Å—Ç –ø–æ—Å–ª–∞–Ω–∏—è>")
        return

    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –∏ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–∞–Ω–∏—è
    remaining = args[0].strip()
    if ' ' in remaining:
        country_name, msg = remaining.split(' ', 1)
    else:
        await message.reply("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –∏ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–∞–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: /send –ì–µ—Ä–º–∞–Ω–∏—è –ü—Ä–∏–≤–µ—Ç!")
        return

    country_name = country_name.strip()
    msg = msg.strip()
    if not country_name or not msg:
        await message.reply("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –∏ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–∞–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: /send –ì–µ—Ä–º–∞–Ω–∏—è –ü—Ä–∏–≤–µ—Ç!")
        return

    # –ü–æ–ª—É—á–∞–µ–º user_id –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    recipient_user_id = await get_user_id_by_country(country_name)
    if not recipient_user_id:
        await message.reply(f"–°—Ç—Ä–∞–Ω–∞ '{country_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    if recipient_user_id == user_id:
        await message.reply("–ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ—Å–ª–∞–Ω–∏–µ —Å–∞–º–æ–º—É —Å–µ–±–µ.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—é
    text = f"–í–∞–º –ø–æ—Å–ª–∞–Ω–∏–µ –∏–∑ —Å—Ç—Ä–∞–Ω—ã {sender_country}: {msg}"
    try:
        await message.bot.send_message(recipient_user_id, text)
        await message.reply("–ü–æ—Å–ª–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
    except Exception as e:
        await message.reply("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ—Å–ª–∞–Ω–∏—è. –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞ –∏–ª–∏ –Ω–∏–∫–æ–≥–¥–∞ –µ–º—É –Ω–µ –ø–∏—Å–∞–ª.")


def register(dp):
    dp.include_router(router)
