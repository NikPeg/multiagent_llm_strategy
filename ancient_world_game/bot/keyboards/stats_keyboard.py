from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.callback_data import CallbackData
from config.game_constants import STATS

# CallbackData –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏
stats_cb = CallbackData("stats", "action", "stat_name")

# CallbackData –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏
stat_action_cb = CallbackData("stat_action", "action", "stat_name", "value")

def get_stats_keyboard(player_stats=None, selected_stat=None):
    """
    –°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏ —Å—Ç—Ä–∞–Ω—ã

    Args:
        player_stats (dict): –°–ª–æ–≤–∞—Ä—å —Å —Ç–µ–∫—É—â–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∏–≥—Ä–æ–∫–∞
        selected_stat (str): –ò–º—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ (–¥–ª—è –ø–æ–¥—Å–≤–µ—Ç–∫–∏)

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏
    """
    markup = InlineKeyboardMarkup(row_width=1)

    # –ï—Å–ª–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –±–µ–∑ –∑–Ω–∞—á–µ–Ω–∏–π
    if player_stats is None:
        for stat in STATS:
            button_text = f"{stat_emoji(stat)} {stat.capitalize()}"
            markup.add(InlineKeyboardButton(
                button_text,
                callback_data=stats_cb.new(action="view", stat_name=stat)
            ))
    else:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ç–µ–∫—É—â–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        for stat in STATS:
            stat_value = player_stats.get(stat, 0)
            # –ï—Å–ª–∏ —ç—Ç–æ –≤—ã–±—Ä–∞–Ω–Ω–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞, –¥–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä
            if selected_stat and stat == selected_stat:
                button_text = f"‚û°Ô∏è {stat_emoji(stat)} {stat.capitalize()}: {stat_value}"
            else:
                button_text = f"{stat_emoji(stat)} {stat.capitalize()}: {stat_value}"

            markup.add(InlineKeyboardButton(
                button_text,
                callback_data=stats_cb.new(action="view", stat_name=stat)
            ))

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    markup.row(
        InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data=stats_cb.new(action="refresh", stat_name="all")),
        InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=stats_cb.new(action="back", stat_name="none"))
    )

    return markup

def get_stat_detail_keyboard(stat_name, stat_value=0):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏

    Args:
        stat_name (str): –ù–∞–∑–≤–∞–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        stat_value (int): –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    """
    markup = InlineKeyboardMarkup(row_width=3)

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–æ–π (–¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
    markup.row(
        InlineKeyboardButton("-10", callback_data=stat_action_cb.new(
            action="change", stat_name=stat_name, value=-10)),
        InlineKeyboardButton("-5", callback_data=stat_action_cb.new(
            action="change", stat_name=stat_name, value=-5)),
        InlineKeyboardButton("-1", callback_data=stat_action_cb.new(
            action="change", stat_name=stat_name, value=-1))
    )

    # –ö–Ω–æ–ø–∫–∞ —Å —Ç–µ–∫—É—â–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
    markup.add(InlineKeyboardButton(
        f"{stat_value}",
        callback_data=stat_action_cb.new(action="none", stat_name=stat_name, value=0)
    ))

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
    markup.row(
        InlineKeyboardButton("+1", callback_data=stat_action_cb.new(
            action="change", stat_name=stat_name, value=1)),
        InlineKeyboardButton("+5", callback_data=stat_action_cb.new(
            action="change", stat_name=stat_name, value=5)),
        InlineKeyboardButton("+10", callback_data=stat_action_cb.new(
            action="change", stat_name=stat_name, value=10))
    )

    # –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞
    markup.row(
        InlineKeyboardButton("üîÑ –°–±—Ä–æ—Å–∏—Ç—å", callback_data=stat_action_cb.new(
            action="reset", stat_name=stat_name, value=0)),
        InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=stats_cb.new(
            action="back_to_list", stat_name="none"))
    )

    return markup

def get_country_stats_keyboard(player_stats=None):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–±—â–∏–º –æ–±–∑–æ—Ä–æ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ —Å—Ç—Ä–∞–Ω—ã

    Args:
        player_stats (dict): –°–ª–æ–≤–∞—Ä—å —Å —Ç–µ–∫—É—â–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∏–≥—Ä–æ–∫–∞

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ–±—â–∏–º –æ–±–∑–æ—Ä–æ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
    """
    markup = InlineKeyboardMarkup(row_width=2)

    if player_stats:
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø–∞—Ä–∞–º–∏ –¥–ª—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç–∏
        stats_pairs = [STATS[i:i+2] for i in range(0, len(STATS), 2)]

        for pair in stats_pairs:
            row_buttons = []
            for stat in pair:
                stat_value = player_stats.get(stat, 0)
                button_text = f"{stat_emoji(stat)} {stat.capitalize()}: {stat_value}"
                row_buttons.append(InlineKeyboardButton(
                    button_text,
                    callback_data=stats_cb.new(action="view", stat_name=stat)
                ))
            markup.row(*row_buttons)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
    markup.row(
        InlineKeyboardButton("üìä –ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data=stats_cb.new(action="details", stat_name="all")),
        InlineKeyboardButton("üìà –ì—Ä–∞—Ñ–∏–∫", callback_data=stats_cb.new(action="chart", stat_name="all"))
    )

    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
    markup.add(
        InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=stats_cb.new(action="back", stat_name="none"))
    )

    return markup

def get_stats_comparison_keyboard(available_players):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ —Å –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏

    Args:
        available_players (list): –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    """
    markup = InlineKeyboardMarkup(row_width=1)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞
    for player in available_players:
        player_id = player.get('user_id')
        country_name = player.get('country_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞')

        markup.add(InlineKeyboardButton(
            f"üåç {country_name}",
            callback_data=stats_cb.new(action="compare", stat_name=player_id)
        ))

    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
    markup.add(
        InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=stats_cb.new(action="back", stat_name="none"))
    )

    return markup

def stat_emoji(stat_name):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–º–æ–¥–∑–∏ –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏

    Args:
        stat_name (str): –ù–∞–∑–≤–∞–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏

    Returns:
        str: –≠–º–æ–¥–∑–∏
    """
    # –°–ª–æ–≤–∞—Ä—å —Å —ç–º–æ–¥–∑–∏ –¥–ª—è –∫–∞–∂–¥–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
    emoji_map = {
        "—ç–∫–æ–Ω–æ–º–∏–∫–∞": "üí∞",
        "–≤–æ–µ–Ω–Ω–æ–µ –¥–µ–ª–æ": "‚öîÔ∏è",
        "—Ä–µ–ª–∏–≥–∏—è –∏ –∫—É–ª—å—Ç—É—Ä–∞": "üèõ",
        "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –ø—Ä–∞–≤–æ": "‚öñÔ∏è",
        "—Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞": "üèó",
        "–≤–Ω–µ—à–Ω—è—è –ø–æ–ª–∏—Ç–∏–∫–∞": "üåê",
        "–æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è": "üë•",
        "—Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è": "üó∫",
        "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω–æ—Å—Ç—å": "üî¨"
    }

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —ç–º–æ–¥–∑–∏ –∏–ª–∏ –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
    return emoji_map.get(stat_name, "‚ùì")

def get_radar_chart_settings_keyboard():
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è —Ä–∞–¥–∞—Ä–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–∏–∞–≥—Ä–∞–º–º—ã
    """
    markup = InlineKeyboardMarkup(row_width=2)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    markup.row(
        InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data=stats_cb.new(action="refresh_chart", stat_name="all")),
        InlineKeyboardButton("üìä –õ–∏–Ω–µ–π–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫", callback_data=stats_cb.new(action="line_chart", stat_name="all"))
    )

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞
    markup.row(
        InlineKeyboardButton("üìÖ –ó–∞ –Ω–µ–¥–µ–ª—é", callback_data=stats_cb.new(action="chart_week", stat_name="all")),
        InlineKeyboardButton("üìÖ –ó–∞ –º–µ—Å—è—Ü", callback_data=stats_cb.new(action="chart_month", stat_name="all"))
    )

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–æ–∫–∞–º–∏
    markup.add(
        InlineKeyboardButton("üîÑ –°—Ä–∞–≤–Ω–∏—Ç—å —Å –¥—Ä—É–≥–∏–º–∏", callback_data=stats_cb.new(action="compare_menu", stat_name="all"))
    )

    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
    markup.add(
        InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=stats_cb.new(action="back", stat_name="none"))
    )

    return markup

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –Ω–∞—à–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
__all__ = [
    'get_stats_keyboard',
    'get_stat_detail_keyboard',
    'get_country_stats_keyboard',
    'get_stats_comparison_keyboard',
    'get_radar_chart_settings_keyboard',
    'stats_cb',
    'stat_action_cb'
]
