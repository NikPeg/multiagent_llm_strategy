from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import logging
import random
from io import BytesIO
import matplotlib.pyplot as plt
import numpy as np

from storage import (
    get_player_data,
    get_player_by_username,
    update_player_goals,
    get_player_goals
)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–≤–æ–µ–π —Å—Ç—Ä–∞–Ω–µ
async def cmd_who(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä–∞–Ω–µ –∏–≥—Ä–æ–∫–∞"""
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è –ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥—Ä—É–≥–æ–º –∏–≥—Ä–æ–∫–µ
    command_parts = message.text.split()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    target_username = None
    if len(command_parts) > 1:
        target_username = command_parts[1].lstrip('@')

    if target_username:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å—Ç—Ä–∞–Ω–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞
        player = get_player_by_username(target_username)
        if not player:
            await message.reply(f"–ò–≥—Ä–æ–∫ @{target_username} –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∏–≥—Ä—ã.")
            return
    else:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å—Ç—Ä–∞–Ω–µ –∞–≤—Ç–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        player = get_player_data(message.from_user.id)
        if not player:
            await message.reply("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∏–≥—Ä—ã. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º.")
            return

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å—Ç—Ä–∞–Ω–µ
    country_name = player.get('country_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞')
    economy = player.get('economy', 50)
    military = player.get('military', 50)
    diplomacy = player.get('diplomacy', 50)
    stability = player.get('stability', 50)
    innovation = player.get('innovation', 50)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤–µ–∫—Ç–æ—Ä–Ω—É—é –¥–∏–∞–≥—Ä–∞–º–º—É
    img_bytes = generate_radar_chart(
        country_name,
        [economy, military, diplomacy, stability, innovation]
    )

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã
    description = player.get('description', '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
    await message.reply_photo(
        img_bytes,
        caption=f"üåç **{country_name}**\n\n"
                f"{description}\n\n"
                f"üí∞ –≠–∫–æ–Ω–æ–º–∏–∫–∞: {economy}/100\n"
                f"üî´ –í–æ–µ–Ω–Ω–∞—è –º–æ—â—å: {military}/100\n"
                f"ü§ù –î–∏–ø–ª–æ–º–∞—Ç–∏—è: {diplomacy}/100\n"
                f"‚öñÔ∏è –°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å: {stability}/100\n"
                f"üî¨ –ò–Ω–Ω–æ–≤–∞—Ü–∏–∏: {innovation}/100"
    )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–∞–¥–∞—Ä–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã
def generate_radar_chart(title, values):
    """–°–æ–∑–¥–∞–µ—Ç —Ä–∞–¥–∞—Ä–Ω—É—é –¥–∏–∞–≥—Ä–∞–º–º—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ—ë –∫–∞–∫ BytesIO –æ–±—ä–µ–∫—Ç"""
    # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    categories = ['–≠–∫–æ–Ω–æ–º–∏–∫–∞', '–í–æ–µ–Ω–Ω–∞—è –º–æ—â—å', '–î–∏–ø–ª–æ–º–∞—Ç–∏—è', '–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å', '–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏']

    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    N = len(categories)

    # –£–≥–ª—ã –¥–ª—è –∫–∞–∂–¥–æ–π –æ—Å–∏
    angles = np.linspace(0, 2*np.pi, N, endpoint=False).tolist()

    # –ó–∞–º–∫–Ω—É—Ç—å –≥—Ä–∞—Ñ–∏–∫
    values = values + [values[0]]
    angles = angles + [angles[0]]

    # –°–æ–∑–¥–∞–µ–º —Ñ–∏–≥—É—Ä—É
    fig, ax = plt.subplots(figsize=(6, 6), subplot_kw=dict(polar=True))

    # –†–∏—Å—É–µ–º –≥—Ä–∞—Ñ–∏–∫
    ax.plot(angles, values, 'o-', linewidth=2)
    ax.fill(angles, values, alpha=0.25)

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–µ–π–±–ª—ã
    ax.set_thetagrids(np.degrees(angles[:-1]), categories)

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥–µ–ª—ã
    ax.set_ylim(0, 100)

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    ax.set_title(title, size=15, y=1.1)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±—É—Ñ–µ—Ä
    buf = BytesIO()
    plt.savefig(buf, format='png')
    buf.seek(0)
    plt.close()

    return buf

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –±—É–¥—É—â–µ–≥–æ
async def cmd_future(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –æ –±—É–¥—É—â–µ–º —Å—Ç—Ä–∞–Ω—ã"""
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å—Ç—Ä–∞–Ω–µ –∏–≥—Ä–æ–∫–∞
    player = get_player_data(message.from_user.id)

    if not player:
        await message.reply("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∏–≥—Ä—ã. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º.")
        return

    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å—Ç—Ä–∞–Ω—ã
    country_name = player.get('country_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞')
    government_type = player.get('government_type', '–¥–µ–º–æ–∫—Ä–∞—Ç–∏—è')
    economy_type = player.get('economy_type', '—Ä—ã–Ω–æ—á–Ω–∞—è')

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –±—É–¥—É—â–µ–≥–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ —Å—Ç—Ä–∞–Ω—ã
    future_prediction = generate_future_prediction(country_name, government_type, economy_type, player)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
    await message.reply(
        f"üîÆ **–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –±—É–¥—É—â–µ–≥–æ –¥–ª—è {country_name}**\n\n"
        f"{future_prediction}"
    )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –æ –±—É–¥—É—â–µ–º
def generate_future_prediction(country_name, government_type, economy_type, player):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –æ –±—É–¥—É—â–µ–º —Å—Ç—Ä–∞–Ω—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –µ—ë —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫"""
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ —Å—Ç—Ä–∞–Ω—ã
    economy = player.get('economy', 50)
    military = player.get('military', 50)
    diplomacy = player.get('diplomacy', 50)
    stability = player.get('stability', 50)
    innovation = player.get('innovation', 50)

    # –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π
    predictions = []

    # –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
    if economy > 70:
        predictions.append(f"–≠–∫–æ–Ω–æ–º–∏–∫–∞ {country_name} –ø—Ä–æ–¥–æ–ª–∂–∏—Ç –ø—Ä–æ—Ü–≤–µ—Ç–∞—Ç—å, –ø—Ä–∏–≤–ª–µ–∫–∞—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –∏ —Å–æ–∑–¥–∞–≤–∞—è –Ω–æ–≤—ã–µ —Ä–∞–±–æ—á–∏–µ –º–µ—Å—Ç–∞.")
    elif economy < 30:
        predictions.append(f"–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –±—É–¥—É—Ç –ø—Ä–µ—Å–ª–µ–¥–æ–≤–∞—Ç—å {country_name}, –≤–æ–∑–º–æ–∂–µ–Ω —Ä–æ—Å—Ç –∏–Ω—Ñ–ª—è—Ü–∏–∏ –∏ –±–µ–∑—Ä–∞–±–æ—Ç–∏—Ü—ã.")
    else:
        predictions.append(f"–≠–∫–æ–Ω–æ–º–∏–∫–∞ {country_name} –±—É–¥–µ—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è —Å—Ç–∞–±–∏–ª—å–Ω–æ, –±–µ–∑ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ—Ç—Ä—è—Å–µ–Ω–∏–π.")

    # –í–æ–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
    if military > 70:
        predictions.append(f"–í–æ–µ–Ω–Ω–∞—è –º–æ—â—å {country_name} –±—É–¥–µ—Ç –≤–Ω—É—à–∞—Ç—å —É–≤–∞–∂–µ–Ω–∏–µ —Å–æ—Å–µ–¥—è–º –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –≥—Ä–∞–Ω–∏—Ü.")
    elif military < 30:
        predictions.append(f"–°–ª–∞–±–æ—Å—Ç—å –≤–æ–æ—Ä—É–∂–µ–Ω–Ω—ã—Ö —Å–∏–ª –º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å {country_name} —É—è–∑–≤–∏–º–æ–π –ø–µ—Ä–µ–¥ –≤–Ω–µ—à–Ω–∏–º–∏ —É–≥—Ä–æ–∑–∞–º–∏.")

    # –î–∏–ø–ª–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
    if diplomacy > 70:
        predictions.append(f"–î–∏–ø–ª–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–ª–∏—è–Ω–∏–µ {country_name} –±—É–¥–µ—Ç —Ä–∞—Å—Ç–∏, —Å–ø–æ—Å–æ–±—Å—Ç–≤—É—è –∑–∞–∫–ª—é—á–µ–Ω–∏—é –≤—ã–≥–æ–¥–Ω—ã—Ö –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö —Å–æ–≥–ª–∞—à–µ–Ω–∏–π.")
    elif diplomacy < 30:
        predictions.append(f"–ò–∑–æ–ª—è—Ü–∏—è –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –¥–∏–ø–ª–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞–º –¥–ª—è {country_name}.")

    # –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –æ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
    if stability > 70:
        predictions.append(f"–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å {country_name} –æ–±–µ—Å–ø–µ—á–∏—Ç —Å–ø–æ–∫–æ–π–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –∏ –ø—Ä–æ—Ü–≤–µ—Ç–∞–Ω–∏–µ –≥—Ä–∞–∂–¥–∞–Ω.")
    elif stability < 30:
        predictions.append(f"–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—è –º–æ–≥—É—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–º –≤–æ–ª–Ω–µ–Ω–∏—è–º –≤ {country_name}.")

    # –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –æ–± –∏–Ω–Ω–æ–≤–∞—Ü–∏—è—Ö
    if innovation > 70:
        predictions.append(f"–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–≤–µ–¥–µ—Ç {country_name} –≤ –ª–∏–¥–µ—Ä—ã –≤ –æ–±–ª–∞—Å—Ç–∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–π –∏ –Ω–∞—É—á–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π.")
    elif innovation < 30:
        predictions.append(f"–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –æ—Ç—Å—Ç–∞–≤–∞–Ω–∏–µ –º–æ–∂–µ—Ç —Å–µ—Ä—å–µ–∑–Ω–æ –∑–∞—Ç–æ—Ä–º–æ–∑–∏—Ç—å —Ä–∞–∑–≤–∏—Ç–∏–µ {country_name}.")

    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞
    random.shuffle(predictions)
    selected_predictions = predictions[:min(3, len(predictions))]

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
    future = " ".join(selected_predictions)

    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—É—é —Ñ—Ä–∞–∑—É –≤ —Å—Ç–∏–ª–µ –ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–∞
    if government_type.lower() == "–¥–µ–º–æ–∫—Ä–∞—Ç–∏—è":
        future += f"\n\n–ù–∞—Ä–æ–¥ {country_name} —Å–≤–æ–∏–º –µ–¥–∏–Ω—Å—Ç–≤–æ–º –∏ —Ç—Ä—É–¥–æ–º —Å—Ç—Ä–æ–∏—Ç —Å–≤–µ—Ç–ª–æ–µ –±—É–¥—É—â–µ–µ!"
    elif government_type.lower() == "–¥–∏–∫—Ç–∞—Ç—É—Ä–∞":
        future += f"\n\n–í–µ–ª–∏–∫–∏–π –ª–∏–¥–µ—Ä {country_name} –≤–µ–¥–µ—Ç —Å—Ç—Ä–∞–Ω—É –∫ –≤–µ–ª–∏—á–∏—é –∏ –ø—Ä–æ—Ü–≤–µ—Ç–∞–Ω–∏—é!"
    elif government_type.lower() == "–º–æ–Ω–∞—Ä—Ö–∏—è":
        future += f"\n\n–ú–æ–Ω–∞—Ä—Ö {country_name} –º—É–¥—Ä–æ –ø—Ä–∞–≤–∏—Ç, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è —Å–ª–∞–≤–Ω–æ–µ –±—É–¥—É—â–µ–µ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞!"
    else:
        future += f"\n\n–ò—Å—Ç–æ—Ä–∏—è {country_name} –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—Å—è, –∏ –±—É–¥—É—â–µ–µ –ø—Ä–∏–Ω–µ—Å–µ—Ç –Ω–æ–≤—ã–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è –∏ –ø–æ–±–µ–¥—ã!"

    return future

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≥–æ–ª–æ–≤
async def cmd_goal(message: types.Message):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –≥–æ–ª –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–∞"""
    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = message.from_user.id

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É–∫–≤ –û –¥–ª—è "–ì–û–û–û–û–û–õ"
    o_count = random.randint(1, 7)
    goal_text = f"–ì{'–û' * o_count}–õ!"

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –≥–æ–ª–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    update_player_goals(user_id, o_count)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.reply(goal_text)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –≥–æ–ª–∞–º
async def cmd_stat(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≥–æ–ª–æ–≤ –∏–≥—Ä–æ–∫–∞"""
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è –ª–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥—Ä—É–≥–æ–≥–æ –∏–≥—Ä–æ–∫–∞
    command_parts = message.text.split()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    target_username = None
    if len(command_parts) > 1:
        target_username = command_parts[1].lstrip('@')

    if target_username:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞
        player = get_player_by_username(target_username)
        if not player:
            await message.reply(f"–ò–≥—Ä–æ–∫ @{target_username} –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∏–≥—Ä—ã.")
            return
        user_id = player.get('user_id')
    else:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞–≤—Ç–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        user_id = message.from_user.id
        player = get_player_data(user_id)
        if not player:
            await message.reply("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∏–≥—Ä—ã. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º.")
            return

    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≥–æ–ª–æ–≤
    goals_data = get_player_goals(user_id)

    if not goals_data:
        # –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –≥–æ–ª–∞—Ö
        await message.reply(f"{'–í—ã –µ—â–µ' if user_id == message.from_user.id else '–≠—Ç–æ—Ç –∏–≥—Ä–æ–∫ –µ—â–µ'} –Ω–µ –∑–∞–±–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ –≥–æ–ª–∞!")
        return

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≥–æ–ª–∞—Ö
    total_goals = goals_data.get('total_goals', 0)
    total_os = goals_data.get('total_os', 0)
    avg_os = total_os / total_goals if total_goals > 0 else 0

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    await message.reply(
        f"‚öΩ **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥–æ–ª–æ–≤**\n\n"
        f"üë§ –ò–≥—Ä–æ–∫: {player.get('country_name')}\n"
        f"ü•Ö –í—Å–µ–≥–æ –≥–æ–ª–æ–≤: {total_goals}\n"
        f"üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É–∫–≤ '–û': {total_os}\n"
        f"üìà –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É–∫–≤ '–û' –Ω–∞ –≥–æ–ª: {avg_os:.2f}"
    )
