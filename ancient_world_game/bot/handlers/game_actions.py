from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import logging
from datetime import datetime

from storage import (
    get_player_data,
    update_player_stats,
    add_player_action,
    get_player_actions_history,
    get_action_results,
    save_action_result
)

from ai import (
    generate_action_result,
    generate_report,
    generate_minister_opinion,
    analyze_action_impact
)

from config.game_constants import STATS

# –°–æ—Å—Ç–æ—è–Ω–∏—è FSM –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–≥—Ä–æ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
class ActionStates(StatesGroup):
    waiting_for_action = State()  # –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –ø—Ä–∏–∫–∞–∑–∞

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
def get_confirmation_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è"""
    keyboard = InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_action"),
        InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel_action")
    )
    return keyboard

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
async def cmd_action(message: types.Message, state: FSMContext):
    """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è (–ø—Ä–∏–∫–∞–∑–∞)"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–≥—Ä–æ–∫–æ–º
    player = get_player_data(message.from_user.id)
    if not player:
        await message.answer("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∏–≥—Ä–æ–∫–æ–º. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å–Ω–∞—á–∞–ª–∞.")
        return

    # –ü–æ–ª—É—á–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    action_text = message.text

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É –¥–µ–π—Å—Ç–≤–∏—è
    if len(action_text) < 3:  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞, —á—Ç–æ–±—ã –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /action
        await message.answer(
            "üéØ *–û—Ç–¥–∞—Ç—å –ø—Ä–∏–∫–∞–∑*\n\n"
            "–û–ø–∏—à–∏—Ç–µ —Å–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ. –í—ã –º–æ–∂–µ—Ç–µ –¥–µ–ª–∞—Ç—å –≤—Å—ë —á—Ç–æ —É–≥–æ–¥–Ω–æ:\n"
            "- –ò–∑–º–µ–Ω—è—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –ø–æ–ª–∏—Ç–∏–∫—É\n"
            "- –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –¥—Ä—É–≥–∏–º–∏ —Å—Ç—Ä–∞–Ω–∞–º–∏\n"
            "- –ü—Ä–æ–≤–æ–¥–∏—Ç—å –≤–æ–µ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n"
            "- –†–∞–∑–≤–∏–≤–∞—Ç—å —ç–∫–æ–Ω–æ–º–∏–∫—É –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏\n"
            "–ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.\n\n"
            "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–æ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ."
        )
        return

    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∫–æ–º–∞–Ω–¥—ã /action, —É–¥–∞–ª—è–µ–º –µ—ë –∏–∑ —Ç–µ–∫—Å—Ç–∞
    if action_text.startswith("/action"):
        action_text = action_text[7:].strip()

        # –ï—Å–ª–∏ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞, –ø—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ –¥–µ–π—Å—Ç–≤–∏–µ
        if not action_text:
            await message.answer(
                "üéØ *–û—Ç–¥–∞—Ç—å –ø—Ä–∏–∫–∞–∑*\n\n"
                "–û–ø–∏—à–∏—Ç–µ —Å–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ. –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?"
            )
            await ActionStates.waiting_for_action.set()
            return

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å—Ç—Ä–∞–Ω–µ –∏–≥—Ä–æ–∫–∞
    country_name = player.get('country_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞')

    # –ü—Ä–æ—Å–∏–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    await message.answer(
        f"üìú *–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∏–∫–∞–∑–∞*\n\n"
        f"–°—Ç—Ä–∞–Ω–∞: {country_name}\n\n"
        f"–ü—Ä–∏–∫–∞–∑: {action_text}\n\n"
        f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏–∫–∞–∑–∞:",
        reply_markup=get_confirmation_keyboard()
    )

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(action_text=action_text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—É—Å—Ç–∏–ª –∫–æ–º–∞–Ω–¥—É –±–µ–∑ —Ç–µ–∫—Å—Ç–∞
async def process_action_input(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∏–≥—Ä–æ–∫–æ–º –¥–µ–π—Å—Ç–≤–∏–µ"""
    action_text = message.text

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å—Ç—Ä–∞–Ω–µ –∏–≥—Ä–æ–∫–∞
    player = get_player_data(message.from_user.id)
    country_name = player.get('country_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞')

    # –ü—Ä–æ—Å–∏–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    await message.answer(
        f"üìú *–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∏–∫–∞–∑–∞*\n\n"
        f"–°—Ç—Ä–∞–Ω–∞: {country_name}\n\n"
        f"–ü—Ä–∏–∫–∞–∑: {action_text}\n\n"
        f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏–∫–∞–∑–∞:",
        reply_markup=get_confirmation_keyboard()
    )

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(action_text=action_text)
    await state.reset_state(with_data=False)  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
async def process_action_confirmation(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–º–µ–Ω—É –¥–µ–π—Å—Ç–≤–∏—è"""
    action = callback_query.data

    if action == "cancel_action":
        await callback_query.message.edit_text("‚ùå –ü—Ä–∏–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω.")
        await state.finish()
        return

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    action_text = data.get('action_text')

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å—Ç—Ä–∞–Ω–µ –∏–≥—Ä–æ–∫–∞
    player = get_player_data(callback_query.from_user.id)
    country_name = player.get('country_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞')

    # –°–Ω–∞—á–∞–ª–∞ —Å–æ–æ–±—â–∞–µ–º, —á—Ç–æ –ø—Ä–∏–∫–∞–∑ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
    await callback_query.message.edit_text(
        f"‚è≥ –ò–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–∫–∞–∑–∞ –¥–ª—è —Å—Ç—Ä–∞–Ω—ã {country_name}...\n\n"
        f"–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è."
    )

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    action_id = add_player_action(
        callback_query.from_user.id,
        action_text,
        action_type="custom"
    )

    try:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–º–æ—â—å—é –ò–ò
        result = await generate_action_result(
            country_name=country_name,
            action=action_text,
            player_stats=player
        )

        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–ª–∏—è–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å—Ç—Ä–∞–Ω—ã
        stats_impact = await analyze_action_impact(
            country_name=country_name,
            action=action_text,
            action_result=result,
            current_stats=player
        )

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–∞, –∏—Å–ø–æ–ª—å–∑—É—è STATS –∏–∑ –∫–æ–Ω—Å—Ç–∞–Ω—Ç
        stat_updates = {}
        for stat in STATS:
            if stat in stats_impact:
                stat_updates[stat] = stats_impact[stat]

        update_player_stats(
            callback_query.from_user.id,
            **stat_updates
        )

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–π—Å—Ç–≤–∏—è
        save_action_result(action_id, result, stats_impact)

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
        result_message = (
            f"‚úÖ *–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏–∫–∞–∑–∞*\n\n"
            f"–°—Ç—Ä–∞–Ω–∞: {country_name}\n\n"
            f"–ü—Ä–∏–∫–∞–∑: {action_text}\n\n"
            f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}\n\n"
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        has_impact = any(stat in stats_impact and stats_impact[stat] != 0 for stat in STATS)
        if has_impact:
            result_message += "*–í–ª–∏—è–Ω–∏–µ –Ω–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:*\n"

            for stat in STATS:
                if stat in stats_impact and stats_impact[stat] != 0:
                    value = stats_impact[stat]
                    emoji = "üîº" if value > 0 else "üîΩ"
                    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã
                    stat_name = stat.capitalize()

                    result_message += f"{emoji} {stat_name}: {value:+.1f}\n"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        await callback_query.message.edit_text(result_message)

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–Ω–µ–Ω–∏–µ –º–∏–Ω–∏—Å—Ç—Ä–∞ (–∫–∞–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)
        minister_opinion = await generate_minister_opinion(
            country_name=country_name,
            action=action_text,
            action_result=result
        )

        await callback_query.message.answer(
            f"üíº *–ú–Ω–µ–Ω–∏–µ —Å–æ–≤–µ—Ç–Ω–∏–∫–∞*\n\n{minister_opinion}"
        )

    except Exception as e:
        logging.error(f"Error processing action: {e}", exc_info=True)
        await callback_query.message.edit_text(
            f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–∏–∫–∞–∑–∞: {str(e)}\n\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )

    finally:
        # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.finish()

# –ü—Ä—è–º–æ–µ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –ø—Ä–∏–∫–∞–∑–∞
async def direct_action_processing(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –ø—Ä–∏–∫–∞–∑"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–≥—Ä–æ–∫–æ–º
    player = get_player_data(message.from_user.id)
    if not player:
        return  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∏–≥—Ä–æ–∫, –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –¥–µ–π—Å—Ç–≤–∏—è
    action_text = message.text.strip()

    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å '/'
    if len(action_text) < 5 or action_text.startswith('/'):
        return

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Å—Ç—Ä–∞–Ω–µ –∏–≥—Ä–æ–∫–∞
    country_name = player.get('country_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞')

    # –ü—Ä–æ—Å–∏–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    await message.reply(
        f"üìú *–†–∞—Å—Ü–µ–Ω–∏—Ç—å –∫–∞–∫ –ø—Ä–∏–∫–∞–∑?*\n\n"
        f"–°—Ç—Ä–∞–Ω–∞: {country_name}\n\n"
        f"–ü—Ä–∏–∫–∞–∑: {action_text}\n\n"
        f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏–∫–∞–∑–∞:",
        reply_markup=get_confirmation_keyboard()
    )

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(action_text=action_text)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ –¥–µ–π—Å—Ç–≤–∏–π
async def cmd_history(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –¥–µ–π—Å—Ç–≤–∏–π –∏–≥—Ä–æ–∫–∞"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–≥—Ä–æ–∫–æ–º
    player = get_player_data(message.from_user.id)
    if not player:
        await message.answer("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∏–≥—Ä–æ–∫–æ–º. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å–Ω–∞—á–∞–ª–∞.")
        return

    # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–µ–π—Å—Ç–≤–∏–π
    actions = get_player_actions_history(message.from_user.id, limit=5)

    if not actions:
        await message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏—Å—Ç–æ—Ä–∏–µ–π
    history_message = "üìú *–ò—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π*\n\n"

    for i, action in enumerate(actions, 1):
        action_text = action.get('action_text', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ')
        action_date = action.get('action_date', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –¥–∞—Ç–∞')
        action_id = action.get('id', 0)

        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É —Ç–µ–∫—Å—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—è
        if len(action_text) > 50:
            action_text = action_text[:47] + "..."

        history_message += f"{i}. {action_date}\n   {action_text}\n   /result_{action_id} - –ø–æ–¥—Ä–æ–±–Ω–µ–µ\n\n"

    await message.answer(history_message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
async def cmd_action_result(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"""
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –¥–µ–π—Å—Ç–≤–∏—è –∏–∑ –∫–æ–º–∞–Ω–¥—ã
    command_parts = message.text.split('_')
    if len(command_parts) != 2:
        return

    try:
        action_id = int(command_parts[1])
    except ValueError:
        return

    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–π—Å—Ç–≤–∏—è
    action_result = get_action_results(action_id)

    if not action_result:
        await message.answer("–î–µ–π—Å—Ç–≤–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
    action_text = action_result.get('action_text', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ')
    result_text = action_result.get('result_text', '–†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω')
    action_date = action_result.get('action_date', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –¥–∞—Ç–∞')
    stats_impact = action_result.get('stats_impact', {})

    result_message = (
        f"üìä *–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–π—Å—Ç–≤–∏—è –æ—Ç {action_date}*\n\n"
        f"–î–µ–π—Å—Ç–≤–∏–µ: {action_text}\n\n"
        f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result_text}\n\n"
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    has_impact = any(stat in stats_impact and stats_impact[stat] != 0 for stat in STATS)
    if has_impact:
        result_message += "*–í–ª–∏—è–Ω–∏–µ –Ω–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:*\n"

        for stat in STATS:
            if stat in stats_impact and stats_impact[stat] != 0:
                value = stats_impact[stat]
                emoji = "üîº" if value > 0 else "üîΩ"
                # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã
                stat_name = stat.capitalize()

                result_message += f"{emoji} {stat_name}: {value:+.1f}\n"

    await message.answer(result_message)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ –æ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å—Ç—Ä–∞–Ω—ã
async def cmd_report(message: types.Message):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç—á–µ—Ç –æ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å—Ç—Ä–∞–Ω—ã"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–≥—Ä–æ–∫–æ–º
    player = get_player_data(message.from_user.id)
    if not player:
        await message.answer("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∏–≥—Ä–æ–∫–æ–º. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å–Ω–∞—á–∞–ª–∞.")
        return

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞
    wait_message = await message.answer("‚è≥ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å—Ç—Ä–∞–Ω—ã...")

    try:
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        country_name = player.get('country_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞')

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç —Å –ø–æ–º–æ—â—å—é –ò–ò
        report = await generate_report(country_name=country_name, player_stats=player)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç
        await wait_message.edit_text(
            f"üìà *–û—Ç—á–µ—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å—Ç—Ä–∞–Ω—ã {country_name}*\n\n{report}"
        )

    except Exception as e:
        logging.error(f"Error generating report: {e}", exc_info=True)
        await wait_message.edit_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
